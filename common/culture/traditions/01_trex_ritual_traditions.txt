tradition_levirate_sororate = {
	category = ritual

	layers = {
		0 = intrigue
		1 = mena
		4 = greeting.dds
	}
	is_shown = {
		always = no
	}
	
	parameters = {
        marrying_siblings_spouse = yes
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			# Ethos requirement.
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_spiritual }
						any_in_list = { list = traits this = flag:ethos_communal }
						any_in_list = { list = traits this = flag:ethos_stoic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_communal_spiritual_or_stoic_desc
				}
			}
			# 
			if = {
				limit = {
					always = no
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = lacks_high_piety_level_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
	}
}
tradition_blood_oath = {
	category = ritual

	layers = {
		0 = intrigue
		1 = mena
		4 = greeting.dds
	}
	is_shown = {
		always = no
	}
	
	parameters = {
        can_form_blood_oath = yes
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			# Ethos requirement.
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_spiritual }
						any_in_list = { list = traits this = flag:ethos_communal }
						any_in_list = { list = traits this = flag:ethos_stoic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_communal_spiritual_or_stoic_desc
				}
			}
			# 
			if = {
				limit = {
					always = no
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = lacks_high_piety_level_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 100
	}
}
tradition_miracle_of_birth = {
	category = ritual

	layers = {
		0 = learning
		1 = mediterranean
		4 = greeting.dds
	}
    is_shown = {
    }
	
	parameters = {
        fecund_trait_bonuses = yes
		piety_gain_on_child_birth = yes
		reset_feast_cooldown_on_child_birth = yes
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			# Ethos requirement.
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_communal }
						any_in_list = { list = traits this = flag:ethos_spiritual }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_spiritual_or_communal_desc
				}
			}
			if = {
				limit = {
					trigger_if = {
						limit = {
							scope:character = {
								is_ai = no
							}
						}
						NOT = {
							any_same_culture_count_or_above = {
								count >= 5
								has_trait = fecund
							}
						}
					}
					trigger_else = {
						always = no
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = rulers_with_fecund_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 50
	}
}
tradition_bare_contracts = {
	category = ritual

	layers = {
		0 = intrigue
		1 = mena
		4 = diplomat.dds
	}
    can_pick = {
		custom_tooltip = {
			text = cannot_have_tradition_legalistic
			NOT = { any_in_list = { list = traits this = flag:tradition_legalistic } }
		}
		custom_tooltip = {
			text = cannot_have_tradition_wedding_ceremonies
			NOT = { any_in_list = { list = traits this = flag:tradition_wedding_ceremonies } }
		}
    }
	
	parameters = {
        fickle_trait_more_common = yes
		always_can_divorce = yes
		cheaper_dishonorable_actions = yes
	}
	character_modifier = {
		ai_honor = -10
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			# Ethos requirement.
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_communal }
						any_in_list = { list = traits this = flag:ethos_spiritual }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_spiritual_bureaucratic_or_stoic_desc
				}
			}
			if = {
				limit = {
					trigger_if = {
						limit = {
							scope:character = {
								is_ai = no
							}
						}
						NOT = {
							any_same_culture_count_or_above = {
								count >= 5
								has_trait = fickle
							}
						}
					}
					trigger_else = {
						always = no
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = rulers_with_fickle_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 50
	}
}
tradition_military_parades = {
	category = ritual

	layers = {
		0 = diplo
		1 = western
		4 = laurel.dds
	}
	
	parameters = {
        arrogant_trait_more_common = yes
		parade_at_feasts = yes
	}
	character_modifier = {
		army_toughness_mult = -0.05
		knight_effectiveness_mult = -0.1
		monthly_prestige_gain_per_knight_add = 0.05
	}
	
	cost = {
		prestige = {
			add = {
				value = tradition_base_cost
				desc = BASE
				format = "BASE_VALUE_FORMAT"
			}
			# Ethos requirement.
			if = {
				limit = {
					NOR = {
						any_in_list = { list = traits this = flag:ethos_courtly}
						any_in_list = { list = traits this = flag:ethos_bellicose }
						any_in_list = { list = traits this = flag:ethos_bureaucratic }
					}
				}
				add = {
					value = tradition_incompatible_ethos_penalty
					desc = not_spiritual_bureaucratic_or_stoic_desc
				}
			}
			if = {
				limit = {
					trigger_if = {
						limit = {
							scope:character = {
								is_ai = no
							}
						}
						NOT = {
							any_same_culture_count_or_above = {
								count >= 5
								has_trait = arrogant
							}
						}
					}
					trigger_else = {
						always = no
					}
				}
				add = {
					value = tradition_unfulfilled_criteria_penalty
					desc = rulers_with_arrogant_desc
				}
			}
			
			multiply = tradition_replacement_cost_if_relevant
		}
	}
	
	ai_will_do = {
		value = 50
	}
}
