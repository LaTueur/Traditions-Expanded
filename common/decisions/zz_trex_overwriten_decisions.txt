host_feast_decision = {
	picture = "gfx/interface/illustrations/decisions/decision_misc.dds"
	ai_check_interval = 60
	
	sort_order = 69

	title = {
		first_valid = {
			triggered_desc = {
				trigger = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 5 }
				}
				desc = host_exotic_feast_decision
			}
			triggered_desc = {
				trigger = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 4 }
				}
				desc = host_lavish_feast_decision
			}
			triggered_desc = {
				trigger = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 3 }
				}
				desc = host_grand_feast_decision
			}
			triggered_desc = {
				trigger = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 2 }
				}
				desc = host_modest_feast_decision
			}
			desc = host_feast_decision
		}
	}

	cost = {
		gold = {
			value = feast_activity_cost
			if = {
				limit = {
					exists = var:protected_alcohol_stores
					var:protected_alcohol_stores > 0
				}
				multiply = 0.5
			}
		}
	}


	cooldown = { days = standard_feast_cooldown_time }

	desc = host_feast_decision_opening_desc
	selection_tooltip = host_feast_decision_tooltip

	is_shown = {
		is_landed = yes
		highest_held_title_tier > tier_barony
	}

	is_valid_showing_failures_only = {
		is_available_adult = yes
	}

	effect = {
		capital_province = {
			spawn_activity = {
				type = activity_feast
				owner = root
			}
		}
		custom_tooltip = host_feast_decision_desc_vassals
		if = {
			limit = {
				is_independent_ruler = no
			}
			custom_tooltip = host_feast_decision_desc_liege_opinion
		}
		if = {
			limit = {
				employs_court_position = court_musician_court_position
				any_court_position_holder = {
			        type = court_musician_court_position
			        is_physically_able = yes
			    }
			}
			custom_tooltip = host_feast_decision_desc_court_musician_opinion
		}

		#Piety gain
		if = {
			limit = {
				faith = {
					OR = {
						has_doctrine_parameter = piety_from_feasts_active
						AND = {
							has_doctrine_parameter = summer_festivals_active
							# Only during 'summer' (May 1st through July 31st).
							current_month >= 5
							current_month <= 7
						}
					}
				}
			}
			add_piety = {
				value = 0

				faith = {
					if = {
						limit = {
							has_doctrine_parameter = summer_festivals_active
							# Only during 'summer' (May 1st through July 31st).
							current_month >= 5
							current_month <= 7
						}
						add = major_piety_value
					}
					if = {
						limit = {
							has_doctrine = tenet_ritual_celebrations
						}
						add = medium_piety_value
					}
					if = {
						limit = {
							has_doctrine = tenet_hedonistic
						}
						add = medium_piety_value
					}
				}
				trex_court_food_quality_multiplier = yes

				min = medium_piety_value # Always give some piety, even if we don't have any of the specified tenets.
			}
		}

		#Prestige gain from Tradition
		if = {
			limit = {
				culture = {
					OR = {
						has_cultural_parameter = refined_feasts
						has_cultural_parameter = parade_at_feasts
					}
				}
			}
			add_prestige = {
				if = {
					limit = {
						culture = {
							has_cultural_parameter = refined_feasts
						}
					}
					add = medium_prestige_value
				}
				if = {
					limit = {
						culture = {
							has_cultural_parameter = parade_at_feasts
						}
					}
					add = trex_parade_prestige_value
				}
				trex_court_food_quality_multiplier = yes
			}
		}

		#Stress loss
		if = {
			limit = {
				OR = {
					has_trait = shy
				}
			}
			custom_tooltip = host_feast_decision_desc_shy
		}
		else = {
			if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 5 }
				}
				stress_impact = {
					base = exotic_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 4 }
				}
				stress_impact = {
					base = lavish_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value >= 3 }
				}
				stress_impact = {
					base = medium_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else_if = {
				limit = {
					has_royal_court = yes
					amenity_level = { type = court_food_quality value <= 1 }
				}
				stress_impact = {
					base = meager_feast_stress_loss_value
					gluttonous = feast_stress_loss_value
					gregarious = feast_stress_loss_value
					reveler_1 = feast_stress_loss_value
					reveler_2 = feast_stress_loss_value
					reveler_3 = feast_stress_loss_value
					drunkard = feast_stress_loss_value
					comfort_eater = feast_stress_loss_value
					generous = feast_stress_loss_value
					greedy = activity_stress_gain_impact
				}
			}
			else = {
				stress_impact = {
					base = feast_stress_loss_value
					gluttonous = activity_stress_loss_impact
					gregarious = activity_stress_loss_impact
					reveler_1 = activity_stress_loss_impact
					reveler_2 = activity_stress_loss_impact
					reveler_3 = activity_stress_loss_impact
					drunkard = activity_stress_loss_impact
					comfort_eater = activity_stress_loss_impact
					generous = activity_stress_loss_impact
					greedy = activity_stress_gain_impact
				}
			}
		}
		if = {
			limit = { exists = var:protected_alcohol_stores }
			set_variable = {
				name = protected_alcohol_stores
				value = 0
			}
		}
	}
}

stress_loss_reclusive_decision = { #by Linnéa Thimrén
	picture = "gfx/interface/illustrations/decisions/decision_personal_religious.dds"
	desc = stress_loss_reclusive_decision_desc
	selection_tooltip = stress_loss_reclusive_decision_tooltip

	ai_check_interval = 120

	cooldown = { days = 1095 }

	is_shown = {
		has_trait = reclusive
	}

	is_valid_showing_failures_only = {
		is_available = yes
	}

	effect = {
		
		custom_tooltip = stress_loss_drunkard_decision_effect_tooltip

		show_as_tooltip = { #The effect is actually applied in the event itself
			trex_reclusive_prestige_loss_effect = yes
		}

		trigger_event = {
			on_action = stress_loss_reclusive
		}
	}
	
	ai_potential = {
		always = yes
	}

	ai_will_do = {
		base = 0

		modifier = {
			add = 25
			stress > low_medium_stress
		}

		modifier = {
			add = 50
			stress > medium_stress
		}

		modifier = {
			add = 50
			stress > high_stress
		}

		modifier = {
			add = 100
			stress > low_medium_stress
			culture = { has_cultural_parameter = reclusive_decision_no_prestige_cost }
		}
	}
}